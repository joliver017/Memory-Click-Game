{"version":3,"sources":["components/Card/index.js","components/Wrapper/index.js","App.js","index.js"],"names":["Card","props","react_default","a","createElement","className","key","id","alt","name","src","image","onClick","handleClick","Wrapper","children","App","state","cards","clickedCards","score","winlose","_this","includes","setState","push","console","log","i","length","j","Math","floor","random","_ref","_this2","this","components_Wrapper","map","components_Card","Object","assign","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"g+BAaeA,MAVf,SAAcC,GACZ,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKE,IAAKL,EAAMM,GAAIC,IAAKP,EAAMQ,KAAMC,IAAKT,EAAMU,MAAOC,QAAS,kBAAMX,EAAMY,YAAYZ,EAAMM,gBCAvFO,MAJf,SAAiBb,GACf,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMc,kBC6D1BC,oNA1DbC,MAAQ,CACNC,QACAC,aAAc,GACdC,MAAO,EACPC,QAAS,MAGXR,YAAc,SAACN,GACb,IAAIY,EAAeG,EAAKL,MAAME,aAI9B,GAAGA,EAAaI,SAAShB,GAGvB,OAFAe,EAAKE,SAAS,CAAEL,aAAc,GAAIC,MAAO,SACzCE,EAAKE,SAAS,CAACH,QAAS,aAKxBF,EAAaM,KAAKlB,GAClBe,EAAKE,SAAS,CAACJ,MAAOE,EAAKL,MAAMG,MAAQ,EAAGC,QAAS,KAEvDK,QAAQC,IAAIL,EAAKL,OAGjB,IAAK,IAAIW,EAAI,EAAGA,EAAEV,EAAMW,OAAQD,IAAK,CACnC,IAAIE,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADLM,EAEV,CAAChB,EAAMY,GAAIZ,EAAMU,IAAvCV,EAAMU,GAF0BM,EAAA,GAEtBhB,EAAMY,GAFgBI,EAAA,GAMZ,IAArBZ,EAAKL,MAAMG,OACbE,EAAKE,SAAS,CAACH,QAAS,WAAYF,aAAc,GAAIC,MAAO,6EAKxD,IAAAe,EAAAC,KACP,OACAlC,EAAAC,EAAAC,cAACiC,EAAD,KACEnC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UAAd,qBACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,oCACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,WAAmC+B,KAAKnB,MAAMG,OAC9ClB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UAAU+B,KAAKnB,MAAMI,SAElCe,KAAKnB,MAAMC,MAAMoB,IAAI,SAACrC,GAAD,OACpBC,EAAAC,EAAAC,cAACmC,EAADC,OAAAC,OAAA,GACIxC,EADJ,CAEAK,IAAKL,EAAMM,GACXM,YAAasB,EAAKtB,yBAlDR6B,IAAMC,kBCDxBC,IAASC,OAAO3C,EAAAC,EAAAC,cAAC0C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.267115f4.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Card(props) {\n  return (\n    <div className=\"card\">\n      <div className=\"img-container\">\n        <img key={props.id} alt={props.name} src={props.image} onClick={() => props.handleClick(props.id)}/>\n      </div>\n    </div>\n  );\n}\n\nexport default Card;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport Card from \"./components/Card\";\nimport Wrapper from \"./components/Wrapper\";\nimport cards from \"./cards.json\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  state = {\n    cards,\n    clickedCards: [],\n    score: 0,\n    winlose: \"\"\n  }\n\n  handleClick = (id) => {\n    let clickedCards = this.state.clickedCards\n    \n    // We start with an empty array and push the clicked cards to the clickedCards array\n    // If a card ID already exists in this array, show you lose, reset score to 0, and empty array again to start over\n    if(clickedCards.includes(id)) {\n      this.setState({ clickedCards: [], score: 0})\n      this.setState({winlose: \"You lose\"})\n      return;\n    }\n    // Otherwise, increase score by 1\n    else {\n      clickedCards.push(id)\n      this.setState({score: this.state.score + 1, winlose: \"\"})\n    }\n    console.log(this.state)\n\n    // This shuffles the cards\n    for (let i = 0; i<cards.length; i++) {\n      let j = Math.floor(Math.random() * (i + 1));\n        [cards[i], cards[j]] = [cards[j], cards[i]];\n    }\n\n    // Show you win and reset the game again if all cards clicked once\n    if (this.state.score === 9) {\n      this.setState({winlose: \"You win!\", clickedCards: [], score: 0})\n      return;\n    }\n  }\n\n  render() {\n    return (\n    <Wrapper>\n      <h1 className=\"header\">Memory Click Game</h1>\n      <h2 className=\"subheader\">Don't click the same image twice</h2>\n      <h2 className=\"subheader\">Total = {this.state.score}</h2>\n      <h1 className=\"header\">{this.state.winlose}</h1>\n      \n      {this.state.cards.map((props) => (\n        <Card \n        {...props}\n        key={props.id}\n        handleClick={this.handleClick}/>\n      )\n      )}\n      \n    </Wrapper>\n  );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}